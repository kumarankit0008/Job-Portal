{"version":3,"file":"static/js/9943.48c8bfdb.chunk.js","mappings":"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","sources":["../node_modules/jwt-decode/lib/atob.js","../node_modules/jwt-decode/lib/base64_url_decode.js","../node_modules/jwt-decode/lib/index.js","hooks/useAuthVerify.js","globalComponents/PrivateRoute.js"],"sourcesContent":["/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}","import { useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { login, logout } from \"../features/userAuth/userAuthSlice\";\nimport jwt_decode from \"jwt-decode\";\n\n// This is only for when user try to login\nconst useAuthVerify = () => {\n  const dispatch = useDispatch();\n  const [authLoading, setAuthLoading] = useState(true);\n  const [isAuthUser, setIsAuthUser] = useState(false);\n  useEffect(() => {\n    const localAuth = JSON?.parse(localStorage.getItem(\"auth\"));\n    const { token, user } = localAuth || {};\n    if (user && token) {\n      const { exp } = jwt_decode(token) || {};\n      if (Date.now() > exp * 1000) {\n        setIsAuthUser(false);\n        dispatch(logout());\n      }\n      setIsAuthUser(true);\n      dispatch(login({ user, token }));\n    } else {\n      setIsAuthUser(false);\n    }\n    setAuthLoading(false);\n    // console.log(\"useAuthVerify\");\n  }, [dispatch]);\n\n  return [authLoading, isAuthUser];\n};\n\nexport default useAuthVerify;\n","import React from \"react\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport useAuthVerify from \"../hooks/useAuthVerify\";\n\nconst PrivateRoute = ({ children }) => {\n  const [authLoading, isAuthUser] = useAuthVerify();\n  const location = useLocation();\n  if (authLoading) {\n    return (\n      <div className=\"d-flex justify-center\">\n        {/* <Spinner />; */}\n        Loading...\n      </div>\n    );\n  }\n  if (isAuthUser) {\n    return children;\n  } else {\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n};\n\nexport default PrivateRoute;\n"],"names":["InvalidCharacterError","message","this","prototype","Error","name","window","atob","bind","input","str","String","replace","length","bs","buffer","bc","idx","output","charAt","fromCharCode","indexOf","decodeURIComponent","m","p","code","charCodeAt","toString","toUpperCase","b64DecodeUnicode","err","InvalidTokenError","token","options","pos","header","JSON","parse","base64_url_decode","split","e","dispatch","useDispatch","useState","authLoading","setAuthLoading","isAuthUser","setIsAuthUser","useEffect","localStorage","getItem","user","exp","jwt_decode","Date","now","logout","login","children","useAuthVerify","location","useLocation","className","to","state","from"],"sourceRoot":""}