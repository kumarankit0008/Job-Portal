{"version":3,"file":"static/js/448.b705a986.chunk.js","mappings":"qPAEAA,MAASC,SAET,IAmFA,EAnFyB,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACrBC,EAAI,0BAAsBD,EAAUE,KAGxC,OAEE,+BACE,kBAAOC,UAAU,mCAAjB,UACE,gBAAIA,UAAU,6CAAd,WACE,eAAIA,UAAU,wCAAd,UACE,gBAAKA,UAAU,oBAAf,UACE,iBAAMA,UAAU,cAAhB,SAA+BH,EAAUI,YAG7C,eAAID,UAAU,wBAAd,UACE,iBAAMA,UAAU,+DAAhB,SACCH,EAAUK,WAGb,eAAIF,UAAU,wBAAd,SACGL,IAAOE,EAAUM,WAAWC,aAE/B,eAAIJ,UAAU,wBAAd,UACE,gBAAKA,UAAU,kCAAf,UACE,SAAC,KAAD,CAAMK,GAAIP,EAAV,UACE,gBAAKE,UAAU,0EAAf,UACE,iBACEM,MAAM,6BACNC,KAAK,OACLC,QAAQ,YACRC,OAAO,eAJT,WAKE,iBACEC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,sCAEJ,iBACEH,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,wIAOd,eAAIb,UAAU,wBAAd,UACE,gBAAKA,UAAU,kCAAf,UACE,SAAC,KAAD,CAAMK,GAAIP,EAAV,UACE,gBAAKE,UAAU,0EAAf,UACE,iBACEM,MAAM,6BACNC,KAAK,OACLC,QAAQ,YACRC,OAAO,eAJT,WAKE,iBACEC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,sCAEJ,iBACEH,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,6IAcvB,EC1CD,EArCsB,WAAO,IAAD,EAClBC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA4BE,EAAAA,EAAAA,IAAyBF,GAA7CG,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAGd,OADFC,QAAQC,IAAIH,IAER,gBAAKjB,UAAU,kBAAf,UACA,gBAAKA,UAAU,sFAAf,UACE,iBAAKA,UAAU,wBAAf,WACE,gBAAKA,UAAU,0BAAf,wBACA,gBAAKA,UAAU,kCAAf,UACE,mBAAOA,UAAU,8BAAjB,WACE,4BACE,gBAAIA,UAAU,6DAAd,WACE,eAAIA,UAAU,sBAAd,6BACA,eAAIA,UAAU,wBAAd,oBACA,eAAIA,UAAU,wBAAd,wBACA,eAAIA,UAAU,wBAAd,wBACA,eAAIA,UAAU,wBAAd,+BAIFkB,GAAY,SAACG,EAAA,EAAD,IAAH,OACPJ,QADO,IACPA,GADO,UACPA,EAAMK,sBADC,aACP,EAAsBC,KAAI,SAAA1B,GAEtB,OAAO,SAAC,EAAD,CAAsCA,UAAWA,GAA1BA,EAAUE,IAE3C,eAQhB,C,uDChBD,IApBgB,WACd,OACE,+BACE,gBAAKC,UAAU,4BAAf,UACE,SAAC,KAAD,CACEwB,OAAQ,GACRC,MAAO,GACPC,MAAM,UACNC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,EACTC,UAAU,eACVC,eAAe,UACfnB,YAAa,EACboB,qBAAsB,OAK/B,C","sources":["pages/recruiterPage/recruiterComponents/ApplicantListRow.js","pages/recruiterPage/recruiterComponents/ApplicantList.js","utils/Spinner.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport moment from 'moment';\nmoment().format();\n\nconst ApplicantListRow = ({applicant}) => {\n  let link = `jobs/applicants/${applicant._id}`\n\n\n  return (     \n\n    <>\n      <tbody className=\"text-gray-600 text-sm font-light\">\n        <tr className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"py-3 px-6 text-left whitespace-nowrap\">\n            <div className=\"flex items-center\">\n              <span className=\"font-medium\">{applicant.name}</span>\n            </div>\n          </td>\n          <td className=\"py-3 px-6 text-center\">\n            <span className=\"bg-purple-200 text-purple-600 py-1 px-3 rounded-full text-xs\">\n            {applicant.email}\n            </span>\n          </td>\n          <td className=\"py-3 px-6 text-center\">\n            {moment(applicant.createdAt).fromNow()}\n          </td>\n          <td className=\"py-3 px-6 text-center\">\n            <div className=\"flex item-center justify-center\">\n              <Link to={link}>\n                <div className=\"w-4 mr-2 transform hover:text-purple-500 hover:scale-110 cursor-pointer\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\">\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                    />\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n                    />\n                  </svg>\n                </div> \n              </Link>\n            </div>\n          </td>\n          <td className=\"py-3 px-6 text-center\">\n            <div className=\"flex item-center justify-center\">\n              <Link to={link}>\n                <div className=\"w-4 mr-2 transform hover:text-purple-500 hover:scale-110 cursor-pointer\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\">\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                    />\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n                    />\n                  </svg>\n                </div> \n              </Link>\n \n              \n            </div>\n          </td>\n        </tr>\n      </tbody>\n      </>\n\n    )\n};\n\nexport default ApplicantListRow;\n","import React from \"react\";\nimport { useGetApplicantListQuery } from \"../../../features/requiter/recruiterApi\";\nimport Spinner from \"../../../utils/Spinner\";\nimport { useParams } from \"react-router-dom\";\nimport ApplicantListRow from \"./ApplicantListRow\";\n\nconst ApplicantList = () => {\n  const { id } = useParams();\n  const { data, isLoading } = useGetApplicantListQuery(id);\n  // const applicant = data?.job;\nconsole.log(data);\n  return (\n    <div className=\"overflow-x-auto\">\n    <div className=\"min-w-screen min-h-screen flex justify-center bg-gray-100 font-sans overflow-hidden\">\n      <div className=\"w-full px-15 lg:px-10\">\n        <div className=\"text-2xl font-bold mt-6\">Your Jobs</div>\n        <div className=\"bg-white shadow-md rounded my-6\">\n          <table className=\"min-w-max w-full table-auto\">\n            <thead>\n              <tr className=\"bg-gray-200 text-gray-600 uppercase text-sm leading-normal\">\n                <th className=\"py-3 px-6 text-left\">Applicant Name</th>\n                <th className=\"py-3 px-6 text-center\">Email</th>\n                <th className=\"py-3 px-6 text-center\">Post Date</th>\n                <th className=\"py-3 px-6 text-center\">Applicant</th>\n                <th className=\"py-3 px-6 text-center\">View Profile</th>\n              </tr>\n            </thead>\n            {\n              isLoading ? <Spinner/> :\n                data?.ApplicantByJob?.map(applicant=>{\n\n                    return <ApplicantListRow key={applicant._id} applicant={applicant}/>\n\n                })\n            }\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n  );\n};\n\nexport default ApplicantList;\n","import { Oval } from \"react-loader-spinner\";\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport React from \"react\";\n\nconst Spinner = () => {\n  return (\n    <>\n      <div className=\"flex justify-center my-20\">\n        <Oval\n          height={80}\n          width={80}\n          color=\"#3CCF56\"\n          wrapperStyle={{}}\n          wrapperclassName=\"\"\n          visible={true}\n          ariaLabel=\"oval-loading\"\n          secondaryColor=\"#4fa94d\"\n          strokeWidth={2}\n          strokeWidthSecondary={2}\n        />\n      </div>\n    </>\n  );\n};\nexport default Spinner;\n"],"names":["moment","format","applicant","link","_id","className","name","email","createdAt","fromNow","to","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","id","useParams","useGetApplicantListQuery","data","isLoading","console","log","Spinner","ApplicantByJob","map","height","width","color","wrapperStyle","wrapperclassName","visible","ariaLabel","secondaryColor","strokeWidthSecondary"],"sourceRoot":""}