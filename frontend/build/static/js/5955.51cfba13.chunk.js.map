{"version":3,"file":"static/js/5955.51cfba13.chunk.js","mappings":"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","sources":["features/category/categoryApi.js","pages/recruiterPage/recruiterComponents/RecruiterAddJobs.js","utils/Spinner.js"],"sourcesContent":["import { APIsSlice } from \"../APIs/APIsSlice\";\nconst roleHeader = {\n  role: \"admin\",\n};\nexport const categoryAPI = APIsSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    getCategory: builder.query({\n      query: () => ({\n        url: \"/api/category/all-category\",\n        method: \"GET\",\n      }),\n      providesTags: [\"category\"],\n    }),\n    addCategory: builder.mutation({\n      query: ({ category, status }) => ({\n        url: \"/api/category/add-category\",\n        method: \"POST\",\n        headers: roleHeader,\n        body: { category, status },\n      }),\n      invalidatesTags: [\"category\"],\n    }),\n    deleteCategory: builder.mutation({\n      query: (id) => ({\n        url: `/api/category/delete/${id}`,\n        method: \"DELETE\",\n        headers: roleHeader,\n      }),\n      invalidatesTags: [\"category\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetCategoryQuery,\n  useAddCategoryMutation,\n  useDeleteCategoryMutation,\n} = categoryAPI;\n","import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport { useGetCategoryQuery } from \"../../../features/category/categoryApi\";\nimport { usePostJobMutation } from \"../../../features/requiter/recruiterApi\";\nimport Spinner from \"../../../utils/Spinner\";\n\nconst RecruiterAddJobs = () => {\n  const { data: category, isLoading } = useGetCategoryQuery();\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n  } = useForm();\n  const [postJob, { isSuccess, isError }] = usePostJobMutation();\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success(\"Job posted successfully\", {\n        toastId: \"success\",\n      });\n      reset();\n    }\n    if (isError) {\n      toast.error(\"Something Went Wrong\", {\n        toastId: \"error\",\n      });\n    }\n  }, [isError, isSuccess, reset]);\n\n\n  return (\n    <section className=\"w-full container mx-auto mb-5\">\n      <div className=\"flex justify-center items-center\">\n        {\n          isLoading ? <Spinner /> :\n            <form onSubmit={handleSubmit((data) => {\n              postJob(data);\n            })}\n              className=\"w-full bg-secondary p-5 md:p-10 shadow-lg\"\n            >\n              {/* ........job title input filed......... */}\n              <div className=\"flex flex-wrap mb-4\">\n                <div className=\"w-full\">\n                  <label className=\"block mb-2\">Job Title*</label>\n                  <input\n                    className=\"input input-bordered w-full rounded-none\"\n                    type=\"text\"\n                    placeholder=\"job title\"\n                    {...register(\"title\", {\n                      required: {\n                        value: true,\n                        message: \"Job title is required\",\n                      },\n                    })}\n                  />\n                  <label className=\"label p-[2px]\">\n                    {errors.title?.type === \"required\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.title.message}\n                      </span>\n                    )}\n                    {errors.title?.type === \"pattern\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.title.message}\n                      </span>\n                    )}\n                  </label>\n                </div>\n              </div>\n              {/* .......job category and job type......... */}\n              <div className=\"flex mb-6 gap-1\">\n                {/* .....job category input..... */}\n                <div className=\"w-full md:w-1/2 mb-2 md:mb-0\">\n                  <label className=\"block mb-2\">Job Category*</label>\n                  <select\n                    defaultValue={\"none\"}\n                    {...register(\"category\", {\n                      required: {\n                        value: true,\n                        message: \"Job Category is required\",\n                      },\n                    })}\n                    className=\"select select-bordered w-full text-gray-800 rounded-none\">\n                    <option disabled value={\"none\"}>\n                      Select Category\n                    </option>\n                    {category?.all_category.map((category) => (\n                      <option\n                        className=\"text-gray-800\"\n                        key={category._id}\n                        value={\"category._id\"}>\n                        {category.category}\n                      </option>\n                    ))}\n                  </select>\n                  <label className=\"label p-[2px]\">\n                    {errors.category?.type === \"required\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.category.message}\n                      </span>\n                    )}\n                    {errors.category?.type === \"pattern\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.category.message}\n                      </span>\n                    )}\n                  </label>\n                </div>\n\n                {/* .....job type input..... */}\n                <div className=\"w-full md:w-1/2 mb-2 md:mb-0\">\n                  <label className=\"block mb-2\">Job Type*</label>\n                  <select\n                    {...register(\"type\", {\n                      required: {\n                        value: true,\n                        message: \"Job type is required\",\n                      },\n                    })}\n                    className=\"select select-bordered w-full rounded-none\">\n                    <option disabled>Job Type</option>\n                    <option>Full Time</option>\n                    <option>Part Time</option>\n                    <option>Contactual</option>\n                  </select>\n                  <label className=\"label p-[2px]\">\n                    {errors.type?.type === \"required\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.type.message}\n                      </span>\n                    )}\n                    {errors.type?.type === \"pattern\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.type.message}\n                      </span>\n                    )}\n                  </label>\n                </div>\n              </div>\n\n              {/* ...Application Deadline and Salary Currency.. */}\n              <div className=\"flex mb-6 gap-1\">\n                {/* .....Application Deadline input..... */}\n                <div className=\"w-full md:w-1/2 mb-2 md:mb-0\">\n                  <label className=\"block mb-2\">Deadline*</label>\n\n                  <input\n                    className=\"input input-bordered w-full rounded-none\"\n                    type=\"date\"\n                    placeholder=\"Job Title\"\n                    {...register(\"dead_line\", {\n                      required: {\n                        value: true,\n                        message: \"Job deadline is required\",\n                      },\n                    })}\n                  />\n                  <label className=\"label p-[2px]\">\n                    {errors.deadline?.type === \"required\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.deadline.message}\n                      </span>\n                    )}\n                    {errors.deadline?.type === \"pattern\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.deadline.message}\n                      </span>\n                    )}\n                  </label>\n                </div>\n\n                {/* .....job type input..... */}\n                <div className=\"w-full md:w-1/2 mb-2 md:mb-0\">\n                  <label className=\"block mb-2\">Salary*</label>\n                  <select\n                    {...register(\"salary\", {\n                      required: {\n                        value: true,\n                        message: \"Job salary is required\",\n                      },\n                    })}\n                    className=\"select select-bordered w-full rounded-none\">\n                    <option disabled>Select Salary</option>\n                    <option>Negotiable</option>\n                    <option>30000 - 40000</option>\n                    <option>40000 - 50000</option>\n                    <option>50000 - 60000</option>\n                    <option>60000 - 70000</option>\n                    <option>70000 - 80000</option>\n                    <option>80000 - 90000</option>\n                  </select>\n                  <label className=\"label p-[2px]\">\n                    {errors.salary?.type === \"required\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.salary.message}\n                      </span>\n                    )}\n                    {errors.salary?.type === \"pattern\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.salary.message}\n                      </span>\n                    )}\n                  </label>\n                </div>\n              </div>\n\n              {/* ...lavel and compani Logo.. */}\n              <div className=\"flex mb-6 gap-1\">\n                {/* .....cadidate lavel input..... */}\n                <div className=\"w-full md:w-1/2 mb-2 md:mb-0\">\n                  <label className=\"block mb-2\">Lavel*</label>\n                  <select\n                    {...register(\"level\", {\n                      required: {\n                        value: true,\n                        message: \"lavel is required\",\n                      },\n                    })}\n                    className=\"select select-bordered w-full rounded-none\">\n                    <option disabled>Select Level</option>\n                    <option>Entry Level</option>\n                    <option>Mid Level</option>\n                    <option>Senior Level</option>\n                  </select>\n                  <label className=\"label p-[2px]\">\n                    {errors.lavel?.type === \"required\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.lavel.message}\n                      </span>\n                    )}\n                    {errors.lavel?.type === \"pattern\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.lavel.message}\n                      </span>\n                    )}\n                  </label>\n                </div>\n\n                {/* .....Experience file input..... */}\n                <div className=\"w-full md:w-1/2 mb-2 md:mb-0\">\n                  <label className=\"block mb-2\">Experience*:</label>\n                  <input\n                    className=\"input input-bordered w-full rounded-none\"\n                    type=\"text\"\n                    placeholder=\"Experience\"\n                    {...register(\"experience\", {\n                      required: {\n                        value: true,\n                        message: \"Experience is required\",\n                      },\n                    })}\n                  />\n                  <label className=\"label p-[2px]\">\n                    {errors.cLogo?.type === \"required\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.cLogo.message}\n                      </span>\n                    )}\n                    {errors.cLogo?.type === \"pattern\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.cLogo.message}\n                      </span>\n                    )}\n                  </label>\n                </div>\n              </div>\n              {/* ...lavel and compani Logo.. */}\n              <div className=\"flex mb-6 gap-1\">\n                {/* .....Company Detail ..... */}\n                <div className=\"w-full md:w-1/2 mb-2 md:mb-0\">\n                  <label className=\"block mb-2\">Company Name*:</label>\n                  <input\n                    className=\"input input-bordered w-full rounded-none\"\n                    type=\"text\"\n                    placeholder=\"Company Name\"\n                    {...register(\"company_name\", {\n                      required: {\n                        value: true,\n                        message: \"Company Name is required\",\n                      },\n                    })}\n                  />\n                  <label className=\"label p-[2px]\">\n                    {errors.company_name?.type === \"required\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.company_name.message}\n                      </span>\n                    )}\n                    {errors.company_name?.type === \"pattern\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.company_name.message}\n                      </span>\n                    )}\n                  </label>\n                </div>\n\n                {/* .....Company Website ..... */}\n                <div className=\"w-full md:w-1/2 mb-2 md:mb-0\">\n                  <label className=\"block mb-2\">Company Website*:</label>\n                  <input\n                    className=\"input input-bordered w-full rounded-none\"\n                    type=\"url\"\n                    placeholder=\"Company Website\"\n                    {...register(\"company_link\", {\n                      required: {\n                        value: true,\n                        message: \"Company Website is required\",\n                      },\n                    })}\n                  />\n                  <label className=\"label p-[2px]\">\n                    {errors.company_link?.type === \"required\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.company_link.message}\n                      </span>\n                    )}\n                    {errors.company_link?.type === \"pattern\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.company_link.message}\n                      </span>\n                    )}\n                  </label>\n                </div>\n              </div>\n              {/* ...lavel and compani Logo.. */}\n              <div className=\"flex mb-6 gap-1\">\n                {/* .....Address ..... */}\n                <div className=\"w-full md:w-1/2 mb-2 md:mb-0\">\n                  <label className=\"block mb-2\">Address*:</label>\n                  <input\n                    className=\"input input-bordered w-full rounded-none\"\n                    type=\"text\"\n                    placeholder=\"Address\"\n                    {...register(\"address\", {\n                      required: {\n                        value: true,\n                        message: \"Address is required\",\n                      },\n                    })}\n                  />\n                  <label className=\"label p-[2px]\">\n                    {errors.address?.type === \"required\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.address.message}\n                      </span>\n                    )}\n                    {errors.address?.type === \"pattern\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.address.message}\n                      </span>\n                    )}\n                  </label>\n                </div>\n\n                {/* .....Company Website ..... */}\n                <div className=\"w-full md:w-1/2 mb-2 md:mb-0\">\n                  <label className=\"block mb-2\">Vacancy*:</label>\n                  <input\n                    className=\"input input-bordered w-full rounded-none\"\n                    type=\"number\"\n                    placeholder=\"Vacancy\"\n                    {...register(\"vacancy\", {\n                      required: {\n                        value: true,\n                        message: \"Vacancy is required\",\n                      },\n                    })}\n                  />\n                  <label className=\"label p-[2px]\">\n                    {errors.vacancy?.type === \"required\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.vacancy.message}\n                      </span>\n                    )}\n                    {errors.vacancy?.type === \"pattern\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.vacancy.message}\n                      </span>\n                    )}\n                  </label>\n                </div>\n              </div>\n              {/* .....Job description input fied...... */}\n              <div className=\"flex flex-wrap mb-2\">\n                <div className=\"w-full\">\n                  <label className=\"block mb-2\">Job Description*</label>\n                  <textarea\n                    className=\"textarea textarea-bordered w-full border-1 rounded-none h-[100px]\"\n                    type=\"text\"\n                    placeholder=\"Job Description\"\n                    {...register(\"description\", {\n                      required: {\n                        value: true,\n                        message: \"Job Description is required\",\n                      },\n                    })}></textarea>\n                  <label className=\"label p-[2px]\">\n                    {errors.description?.type === \"required\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.description.message}\n                      </span>\n                    )}\n                    {errors.description?.type === \"pattern\" && (\n                      <span className=\"label-text-alt text-red-500\">\n                        {errors.description.message}\n                      </span>\n                    )}\n                  </label>\n                </div>\n              </div>\n\n              <input\n                className=\"btn btn-primary hover:bg-accent w-full text-white rounded-none hover:shadow-lg\"\n                type=\"submit\"\n                value=\"Post the job\"\n              />\n            </form>\n        }\n      </div>\n    </section>\n  );\n};\n\nexport default RecruiterAddJobs;\n","import { Oval } from \"react-loader-spinner\";\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport React from \"react\";\n\nconst Spinner = () => {\n  return (\n    <>\n      <div className=\"flex justify-center my-20\">\n        <Oval\n          height={80}\n          width={80}\n          color=\"#3CCF56\"\n          wrapperStyle={{}}\n          wrapperclassName=\"\"\n          visible={true}\n          ariaLabel=\"oval-loading\"\n          secondaryColor=\"#4fa94d\"\n          strokeWidth={2}\n          strokeWidthSecondary={2}\n        />\n      </div>\n    </>\n  );\n};\nexport default Spinner;\n"],"names":["roleHeader","role","categoryAPI","APIsSlice","endpoints","builder","getCategory","query","url","method","providesTags","addCategory","mutation","category","status","headers","body","invalidatesTags","deleteCategory","id","useGetCategoryQuery","useAddCategoryMutation","useDeleteCategoryMutation","data","isLoading","useForm","register","errors","formState","handleSubmit","reset","usePostJobMutation","postJob","isSuccess","isError","useEffect","toast","toastId","className","onSubmit","type","placeholder","required","value","message","title","defaultValue","disabled","all_category","map","_id","deadline","salary","lavel","cLogo","company_name","company_link","address","vacancy","description","height","width","color","wrapperStyle","wrapperclassName","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary"],"sourceRoot":""}